= javascript_include_tag 'view_models/client_list'

- provide(:title, t('page.client_list.title'))

== render 'components/client_new'

#client_list.client_list
  = search_field_tag :search, nil, 'v-model' => "searchKeywords", \
                     placeholder: t('page.client_list.search_form_placeholder'), lazy: true, class: 'client_list__search'
  = button_tag 'v-on:click' => 'showClientNew', class: 'client_list__btn--new_client' do
    = fa_icon 'check', text: t('page.client_new.title')
  table.client_list__tbl
    thead.client_list__tbl__head
      tr.client_list__tbl__head__row
        th.client_list__tbl__item--cd                   = t('activerecord.attributes.client.cd')
        th.client_list__tbl__item--company_name         = t('activerecord.attributes.client.company_name')
        th.client_list__tbl__item--department_name      = t('activerecord.attributes.client.department_name')
        th.client_list__tbl__item--status               = t('activerecord.attributes.client.status')
        th.client_list__tbl__item--phone_number         = t('activerecord.attributes.client.phone_number')
    tbody.client_list__tbl__body
      tr.client_list__tbl__body__row [
        v-for      = "client in list | selectBy searchKeywords selectSchema | orderBy sortKey"
        id         = "client-{{client.id}}"
        v-on:click = "linkToShow(client.id)"
        track-by   = "id"
      ]
        td.client_list__tbl__item--cd                   v-text='client.cd'
        td.client_list__tbl__item--company_name         v-text='client.company_name'
        td.client_list__tbl__item--department_name      v-text='client.department_name'
        td.client_list__tbl__item--status               v-for="(id, val) in statuses" v-if="id==client.status" v-text="val"
        td.client_list__tbl__item--phone_number         v-text='client.phone_number'

  component [
    :is        = "'clientNew'"
    keep-alive = true
  ]
